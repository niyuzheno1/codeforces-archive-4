//no-unlocked
int a[4];
char grid[52][52];
bool frontier[52];
int n;
{   
    n = 50;
    rd((a--)(4));
    char x = 'A'; 
    rep(l, 0, 48, 12){
        rep(i, n) rep(j, n) if(l <= i < l + 12) {grid[i][j] = x; }
        ++x;
    } 
    rep(i,n) rep(j,n) if(grid[i][j] == 0) grid[i][j] = 'D';
    rep(i, n) frontier[i] = false;
    rep(i, n){
        if(i == 0) continue;
        if(frontier[i-1] == false) frontier[i] = true;
        if(grid[i-1][0] != grid[i][0]) frontier[i] = true;
        if(i == n-1) continue;
        if(grid[i][0] != grid[i+1][0]) frontier[i] = true;
    }
    rep(i, n){
        if(!frontier[i]){
            rep(j, n){
                if(j % 2 == 0){
                    rep(k, 4) if(a[k] != 0 && (k+'A') != grid[i][j]){
                        --a[k];
                        grid[i][j] = 'A'+k;
                        break;
                    }
                }
            }
        }
    }
    wt(n,n);
    //rep(i,n) if(!frontier[i]) wt(1+i);
    rep(i,n) wt(grid[i]);
}
